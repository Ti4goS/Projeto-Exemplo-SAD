CREATE PROCEDURE sp_fato_venda_loja_mensal
AS
BEGIN
    BEGIN TRY
        -- Dropa a tabela se existir
        IF OBJECT_ID('FATO_VENDA_LOJA_MENSAL', 'U') IS NOT NULL
            DROP TABLE FATO_VENDA_LOJA_MENSAL;

        -- criando novamente a tabela
        CREATE TABLE FATO_VENDA_LOJA_MENSAL (
            ID_TEMPO BIGINT NOT NULL,
            ID_LOJA INT NOT NULL,
            VOLUME NUMERIC(10,2) NOT NULL,
            VALOR NUMERIC(10,2) NOT NULL,
            QUANTIDADE INT NOT NULL,
            CONSTRAINT FK_DIM_LOJA FOREIGN KEY (ID_LOJA) REFERENCES DIM_LOJA (ID_LOJA),
            CONSTRAINT FK_TEMPO FOREIGN KEY (ID_TEMPO) REFERENCES DIM_TEMPO (ID_TEMPO)
        );
    END TRY
    BEGIN CATCH
        PRINT ERROR_MESSAGE();
    END CATCH

	DECLARE @MES_VENDA INT 
	DECLARE @COD_LOJA INT
	DECLARE @QUANTIDADE INT
	DECLARE @VOLUME NUMERIC(10,2)
	DECLARE @VALOR NUMERIC(10,2)

	DECLARE @ID_TEMPO BIGINT
	DECLARE @ID_LOJA INT


    DECLARE CUR CURSOR FOR
    SELECT MONTH(DATA_VENDA) AS MES_VENDA, COD_LOJA, COUNT(*) AS QUANTIDADE, SUM(VOLUME) AS VOLUME, SUM(VALOR) AS VALOR
    FROM TB_AUX_VENDA
    GROUP BY COD_LOJA, MONTH(DATA_VENDA)

    OPEN CUR
    FETCH NEXT FROM CUR INTO @MES_VENDA, @COD_LOJA, @QUANTIDADE, @VOLUME, @VALOR

    WHILE @@FETCH_STATUS = 0
    BEGIN

        SELECT @ID_TEMPO = ID_TEMPO 
		FROM DIM_TEMPO 
		WHERE MES = @MES_VENDA AND NIVEL = 'MES'

        SELECT @ID_LOJA = ID_LOJA
        FROM DIM_LOJA
        WHERE COD_LOJA = @COD_LOJA

        INSERT INTO FATO_VENDA_LOJA_MENSAL (ID_TEMPO, ID_LOJA, VOLUME, VALOR, QUANTIDADE)
        VALUES (@ID_TEMPO, @ID_LOJA, @VOLUME, @VALOR, @QUANTIDADE)

        FETCH NEXT FROM CUR INTO @MES_VENDA, @COD_LOJA, @QUANTIDADE, @VOLUME, @VALOR
    END

    CLOSE CUR
    DEALLOCATE CUR   
END;

exec sp_fato_venda_loja_mensal

select * from FATO_VENDA_LOJA_MENSAL